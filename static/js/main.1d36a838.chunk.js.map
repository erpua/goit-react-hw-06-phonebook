{"version":3,"sources":["global.module.css","components/ContactListItem/ContactListItem.module.scss","redux/contacts/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","newContact","id","uuidv4","removeContact","formFilter","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","findContact","props","contacts","find","contact","alert","onAddContact","this","className","styles","main__form","onSubmit","form__label","form__input","type","onChange","form__button","Component","mapDispatchToProps","connect","items","ownProps","item","dispatch","contactsListItem","deleteButton","onClick","normalizedFilter","filter","toLowerCase","includes","map","length","App","title","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d36a838.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"global_title__12tqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactListItem_contactsListItem__BZ-H2\",\"deleteButton\":\"ContactListItem_deleteButton__3BkfJ\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contact/add', (name, number) => ({\n  payload: { newContact: { id: uuidv4(), name, number } },\n}));\n\nconst removeContact = createAction('contact/remove');\n\nconst formFilter = createAction('contact/formFilter');\n\nexport { addContact, formFilter, removeContact };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsActions';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const findContact = this.props.contacts.find(\n      contact => contact.name === name,\n    );\n    if (findContact) {\n      alert(`${findContact.name} is already in contacts`);\n      return;\n    }\n    this.props.onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.main__form} onSubmit={this.handleSubmit}>\n        <label className={styles.form__label}>\n          Name\n          <input\n            className={styles.form__input}\n            type=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n        </label>\n        <label className={styles.form__label}>\n          Number\n          <input\n            className={styles.form__input}\n            type=\"name\"\n            value={number}\n            onChange={this.handleChange}\n            name=\"number\"\n          />\n        </label>\n        <button className={styles.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  onAddContact: addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeContact } from '../../redux/contacts/contactsActions';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactListItem.module.scss';\n\nconst ContactListItem = ({ name, number, removeContact }) => (\n  <li className={styles.contactsListItem}>\n    <p>\n      {name}: {number}\n    </p>\n    <button\n      type=\"button\"\n      className={styles.deleteButton}\n      onClick={removeContact}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\n\n  return {\n    ...item,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  removeContact: () => dispatch(removeContact(ownProps.id)),\n});\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { connect } from 'react-redux';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul>\n      {contacts.map(({ id }) => (\n        <ContactListItem key={id} id={id} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const getVisibleContact = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return {\n    contacts: getVisibleContact,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport ContactListItem from '../ContactListItem';\nimport { connect } from 'react-redux';\nimport { formFilter } from '../../redux/contacts/contactsActions';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange, contacts }) => {\n  return (\n    <section className={styles.main__form}>\n      <label className={styles.form__label}>\n        Find contacts by name\n        <input\n          className={styles.form__input}\n          type=\"name\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n      </label>\n      <ul>\n        {contacts.length > 1 &&\n          contacts.map(({ id }) => <ContactListItem key={id} id={id} />)}\n      </ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const getVisibleContact = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return {\n    contacts: getVisibleContact,\n    value: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  onChange: formFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\n/* Styles */\nimport styles from './global.module.css';\n\n/* Components */\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <h1 className={styles.title}>Phone book</h1>\n      <ContactForm />\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, removeContact, formFilter } from './contactsActions';\n\nconst onAddContact = (state, action) => {\n  return [...state, action.payload.newContact];\n};\n\nconst onRemoveContact = (state, action) =>\n  state.filter(({ id }) => id !== action.payload);\n\nconst items = createReducer([], {\n  [addContact]: onAddContact,\n  [removeContact]: onRemoveContact,\n});\n\nconst filter = createReducer('', {\n  [formFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactsReducer from './contacts/contactsReducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__form\":\"ContactForm_main__form__1zbPt\",\"form__label\":\"ContactForm_form__label__2jDgl\",\"form__input\":\"ContactForm_form__input__121xq\",\"form__button\":\"ContactForm_form__button__33puo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__form\":\"Filter_main__form__M12Lj\",\"form__label\":\"Filter_form__label__1ZYzm\",\"form__input\":\"Filter_form__input__19-GN\",\"contactsListItem\":\"Filter_contactsListItem__1EJ3H\",\"deleteButton\":\"Filter_deleteButton__WfA1X\"};"],"sourceRoot":""}